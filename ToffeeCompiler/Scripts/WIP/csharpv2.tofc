# C# generator script for the ToffeeCompiler utility
# MUST be executed with the ToffeeCompilerCSharp.dll plugin!
# Version: 2.0
# Author: Joshua Scott
#
#
#ifn PLUGIN_CSHARP
	#crash Could not complete generation because you are missing the 'ToffeeCompilerCSharp' plugin!
#endif
#
#
# This pattern describes documentation strings.
# $DocumentationString would be multiline, and contain the "///"
#pattern Documentation
	#writer indent on
	#data Documentation
	#if HasDocumentation
		/// <summary>
		$DocumentationString
		/// </summary>
	#endif
	#writer newline off
#endpattern
#
#
# This pattern describes a list of modifiers so that:
# "broadcast clsend"
# becomes:
# "ToffeeModifiers.Broadcast | ToffeeModifiers.ClientSend"
#pattern Modifiers
	#writer newline off
	#data NextModifier
	#if HasModifier
		#if LastModifier
			ToffeeModifiers.$Modifier
		#else
			ToffeeModifiers.$Modifier | 
			#repeat
		#endif
	#endif
	#writer newline on
#endpattern
#
#
# This pattern describes a method's parameters.
#pattern Parameters
	#writer newline off
	#data NextParameter
	#if HasParameter	
		#if LastParameter
			$PARAMETER_TYPE $PARAMETER_NAME
		#else
			$PARAMETER_TYPE $PARAMETER_NAME, 
			#repeat
		#endif
	#endif
	#writer newline on
#endpattern
#
#
# This pattern describes a method's parameters that
# does not include the type names.
#pattern ParameterNames
	#writer newline off
	#data NextParameter
	#ifn HasParameter
		#return
	#endif
	#
	#if LastParameter
		$PARAMETER_NAME
	#else
		$PARAMETER_NAME, 
		#repeat
	#endif
	#
	#writer newline on
#endpattern
#
#
# This pattern describes properties.
#pattern Properties
	#data Property
	#ifn HasProperty
		#return
	#endif
	#
	#writer indent off
	$Documentation
	#writer newline on
	#
	#if IsStructure
		[ToffeeStructureProperty($StructPropertyNumber)]
	#else
		[ToffeeProperty($Modifiers)]
	#endif
	#
	public $PropertyType $PropertyName { get; set; }
	#
	#ifn LastProperty
		
		#repeat
	#endif
#endpattern
#
#
#data Initial
#ifn HasInitialData
	#return
#endif
#
#if HasNamespace
	#csharp existing $Folder/$Identifier.cs
	#file begin $Folder/$Identifier.cs
#else
	#csharp existing $Identifier.cs
	#file begin $Identifier.cs
#endif
#
/*
	This file was generated by the ToffeeCompiler utility.
*/
using Toffee.Core;
using Toffee.Protocol.Definitions;

#
#
#if HasNamespace
	namespace $Namespace
	{
	#writer indent forwards
#endif
#
#writer indent off
$Documentation
#writer newline 1
#
#if IsObject
	[ToffeeObject]
	public class $Identifier : DistributedObject
#elseif IsService
	[ToffeeService]
	public class $Identifier
#elseif IsStructure
	[ToffeeStructure]
	public struct $Identifier	
#endif
{
#writer indent forwards
#
$Properties
#
#writer indent backwards
}
#
#if HasNamespace
	#writer indent backwards
	}
#endif
#