/*
This file was generated by the ToffeeCompiler utility.
*/
using Toffee.Core;
using Toffee.Protocol.Objects;
using Toffee.Protocol.Definitions;
using Toffee.Protocol.Definitions.Attributes;
using System.CodeDom.Compiler;

namespace Toffee.Protocol.Packets.Internal
{
	[GeneratedCode("ToffeeCompiler", "csharp")]	
	[ToffeeStructure("StdToffee")]
	public partial class InternalPacketHeader : IToffeeStructure
	{
		[ToffeeStructureProperty(1)]
		public uint Sender { get; set; }
		
		[ToffeeStructureProperty(2)]
		public uint[] Receivers { get; set; }
		
		[ToffeeStructureProperty(3)]
		public ushort OpCode { get; set; }
		
		[ToffeeStructureProperty(4)]
		public bool Compressed { get; set; }
		
		[ToffeeStructureProperty(5)]
		public ushort Length { get; set; }
		
		public void WriteTo(ToffeePacket packet)
		{
			packet.Write(Sender);
			packet.Write(Receivers);
			packet.Write(OpCode);
			packet.Write(Compressed);
			packet.Write(Length);
		}
		
		public void ReadFrom(ToffeePacketIterator iterator)
		{
			Sender = iterator.ReadUInt32();
			Receivers = (uint[])iterator.ReadArray();
			OpCode = iterator.ReadUInt16();
			Compressed = iterator.ReadBoolean();
			Length = iterator.ReadUInt16();
		}
	}
}
